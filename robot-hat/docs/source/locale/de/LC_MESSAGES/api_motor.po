# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-30 11:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_motor.rst:4
msgid "module ``motor``"
msgstr "Modul ``motor``"

#: ../api_motor.rst:7
msgid "class ``Motors``"
msgstr "Klasse ``Motors``"

#: ../api_motor.rst:9 ../api_motor.rst:81
msgid "**Example**"
msgstr "**Beispiel**"

#: ../api_motor.rst:11
msgid "Initilize"
msgstr "Initialisieren"

#: ../api_motor.rst:21
msgid "Directly control a motor. Motor 1/2 is according to PCB mark"
msgstr "Direkte Steuerung eines Motors. Motor 1/2 entspricht der Kennzeichnung auf der Platine"

#: ../api_motor.rst:32
msgid ""
"Setup for high level control, high level control provides functions from "
"simple forword, backward, left, right, stop to more complex like joystick"
" control, motor directions calibration, etc."
msgstr ""
"Einrichtung für hochrangige Steuerung, welche Funktionen von einfachen Bewegungen wie Vorwärts, Rückwärts, Links, Rechts, Stopp bis zu komplexeren wie Joysticksteuerung, Kalibrierung der Motorenrichtung usw. bereitstellt."

#: ../api_motor.rst:37
msgid ""
"All these setup only need to run once, and will save in a config file. "
"Next time you load Motors class, it will load from config file."
msgstr ""
"All diese Einrichtungen müssen nur einmal ausgeführt werden und werden in einer Konfigurationsdatei gespeichert. Wenn Sie das nächste Mal die Klasse Motors laden, wird sie aus der Konfigurationsdatei geladen."

#: ../api_motor.rst:53
msgid "Now control the robot"
msgstr "Jetzt den Roboter steuern"

#: ../api_motor.rst:69 ../api_motor.rst:99
msgid "**API**"
msgstr "**API**"

#: of robot_hat.motor.Motors:1
msgid "Bases: :py:class:`~robot_hat.basic._Basic_class`"
msgstr "Basisklasse: :py:class:`~robot_hat.basic._Basic_class`"

#: of robot_hat.motor.Motors.__init__:1
msgid "Initialize motors with robot_hat.motor.Motor"
msgstr "Motoren mit robot_hat.motor.Motor initialisieren"

#: of robot_hat.motor.Motor.__init__ robot_hat.motor.Motor.set_is_reverse
#: robot_hat.motor.Motor.speed robot_hat.motor.Motors.__init__
#: robot_hat.motor.Motors.backward robot_hat.motor.Motors.forward
#: robot_hat.motor.Motors.set_left_id robot_hat.motor.Motors.set_right_id
#: robot_hat.motor.Motors.speed robot_hat.motor.Motors.turn_left
#: robot_hat.motor.Motors.turn_right
msgid "Parameters"
msgstr "Parameter"

#: of robot_hat.motor.Motors.__init__:3
msgid "config file path"
msgstr "Pfad zur Konfigurationsdatei"

#: of robot_hat.motor.Motors.__getitem__:1
msgid "Get specific motor"
msgstr "Spezifischen Motor abrufen"

#: of robot_hat.motor.Motors.stop:1
msgid "Stop all motors"
msgstr "Alle Motoren stoppen"

#: of robot_hat.Motors.left:1
msgid "left motor"
msgstr "linker Motor"

#: of robot_hat.Motors.right:1
msgid "right motor"
msgstr "rechter Motor"

#: of robot_hat.motor.Motors.set_left_id:1
msgid ""
"Set left motor id, this function only need to run once It will save the "
"motor id to config file, and load the motor id when the class is "
"initialized"
msgstr ""
"Linke Motor-ID einstellen, diese Funktion muss nur einmal ausgeführt werden. Sie speichert die Motor-ID in der Konfigurationsdatei und lädt sie beim Initialisieren der Klasse."

#: of robot_hat.motor.Motors.set_left_id:5
#: robot_hat.motor.Motors.set_right_id:5
msgid "motor id (1 or 2)"
msgstr "Motor-ID (1 oder 2)"

#: of robot_hat.motor.Motors.set_right_id:1
msgid ""
"Set right motor id, this function only need to run once It will save the "
"motor id to config file, and load the motor id when the class is "
"initialized"
msgstr ""
"Rechte Motor-ID einstellen, diese Funktion muss nur einmal ausgeführt werden. Sie speichert die Motor-ID in der Konfigurationsdatei und lädt sie beim Initialisieren der Klasse."

#: of robot_hat.motor.Motors.set_left_reverse:1
msgid ""
"Set left motor reverse, this function only need to run once It will save "
"the reversed status to config file, and load the reversed status when the"
" class is initialized"
msgstr ""
"Linken Motor umkehren, diese Funktion muss nur einmal ausgeführt werden. Sie speichert den umgekehrten Status in der Konfigurationsdatei und lädt diesen beim Initialisieren der Klasse."

#: of robot_hat.motor.Motors.set_left_reverse
#: robot_hat.motor.Motors.set_right_reverse
msgid "Returns"
msgstr "Rückgabe"

#: of robot_hat.motor.Motors.set_left_reverse:5
#: robot_hat.motor.Motors.set_right_reverse:5
msgid "if currently is reversed"
msgstr "ob derzeit umgekehrt ist"

#: of robot_hat.motor.Motors.set_left_reverse
#: robot_hat.motor.Motors.set_right_reverse
msgid "Return type"
msgstr "Rückgabetyp"

#: of robot_hat.motor.Motors.set_right_reverse:1
msgid ""
"Set right motor reverse, this function only need to run once It will save"
" the reversed status to config file, and load the reversed status when "
"the class is initialized"
msgstr ""
"Rechten Motor umkehren, diese Funktion muss nur einmal ausgeführt werden. Sie speichert den umgekehrten Status in der Konfigurationsdatei und lädt diesen beim Initialisieren der Klasse."

#: of robot_hat.motor.Motors.speed:1
msgid "Set motor speed"
msgstr "Motorgeschwindigkeit einstellen"

#: of robot_hat.motor.Motors.speed:3
msgid "left motor speed(-100.0~100.0)"
msgstr "Geschwindigkeit des linken Motors (-100,0 bis 100,0)"

#: of robot_hat.motor.Motors.speed:5
msgid "right motor speed(-100.0~100.0)"
msgstr "Geschwindigkeit des rechten Motors (-100,0 bis 100,0)"

#: of robot_hat.motor.Motors.forward:1
msgid "Forward"
msgstr "Vorwärts"

#: of robot_hat.motor.Motor.speed:3 robot_hat.motor.Motors.backward:3
#: robot_hat.motor.Motors.forward:3 robot_hat.motor.Motors.turn_left:3
#: robot_hat.motor.Motors.turn_right:3
msgid "Motor speed(-100.0~100.0)"
msgstr "Motorgeschwindigkeit (-100,0 bis 100,0)"

#: of robot_hat.motor.Motors.backward:1
msgid "Backward"
msgstr "Rückwärts"

#: of robot_hat.motor.Motors.turn_left:1
msgid "Left turn"
msgstr "Links abbiegen"

#: of robot_hat.motor.Motors.turn_right:1
msgid "Right turn"
msgstr "Rechts abbiegen"

#: ../api_motor.rst:79
msgid "class ``Motor``"
msgstr "Klasse ``Motor``"

#: of robot_hat.motor.Motor:1
msgid "Bases: :py:class:`object`"
msgstr "Basisklasse: :py:class:`object`"

#: of robot_hat.motor.Motor.__init__:1
msgid "Initialize a motor"
msgstr "Einen Motor initialisieren"

#: of robot_hat.motor.Motor.__init__:3
msgid "Motor speed control pwm pin"
msgstr "PWM-Pin zur Geschwindigkeitssteuerung des Motors"

#: of robot_hat.motor.Motor.__init__:5
msgid "Motor direction control pin"
msgstr "Pin zur Steuerung der Motorenrichtung"

#: of robot_hat.motor.Motor.speed:1
msgid "Get or set motor speed"
msgstr "Motorgeschwindigkeit abrufen oder einstellen"

#: of robot_hat.motor.Motor.set_is_reverse:1
msgid "Set motor is reversed or not"
msgstr "Motor umkehren oder nicht"

#: of robot_hat.motor.Motor.set_is_reverse:3
msgid "True or False"
msgstr "Wahr oder Falsch"
