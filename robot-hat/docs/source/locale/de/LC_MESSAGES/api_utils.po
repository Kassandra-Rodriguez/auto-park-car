# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-29 18:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_utils.rst:2
msgid "module ``utils``"
msgstr "Modul ``utils``"

#: of robot_hat.utils.set_volume:1
msgid "Set volume"
msgstr "Lautstärke einstellen"

#: of robot_hat.utils.get_ip robot_hat.utils.is_installed
#: robot_hat.utils.mapping robot_hat.utils.run_command
#: robot_hat.utils.set_volume
msgid "Parameters"
msgstr "Parameter"

#: of robot_hat.utils.set_volume:3
msgid "volume(0~100)"
msgstr "Lautstärke(0~100)"

#: of robot_hat.utils.run_command:1
msgid "Run command and return status and output"
msgstr "Befehl ausführen und Status sowie Ausgabe zurückgeben"

#: of robot_hat.utils.run_command:3
msgid "command to run"
msgstr "auszuführender Befehl"

#: of robot_hat.utils.get_battery_voltage robot_hat.utils.get_ip
#: robot_hat.utils.is_installed robot_hat.utils.mapping
#: robot_hat.utils.run_command
msgid "Returns"
msgstr "Rückgabe"

#: of robot_hat.utils.run_command:5
msgid "status, output"
msgstr "Status, Ausgabe"

#: of robot_hat.utils.get_battery_voltage robot_hat.utils.get_ip
#: robot_hat.utils.is_installed robot_hat.utils.mapping
#: robot_hat.utils.run_command
msgid "Return type"
msgstr "Rückgabetyp"

#: of robot_hat.utils.is_installed:1
msgid "Check if command is installed"
msgstr "Überprüfen, ob Befehl installiert ist"

#: of robot_hat.utils.is_installed:3
msgid "command to check"
msgstr "zu überprüfender Befehl"

#: of robot_hat.utils.is_installed:5
msgid "True if installed"
msgstr "Wahr, wenn installiert"

#: of robot_hat.utils.mapping:1
msgid "Map value from one range to another range"
msgstr "Wert von einem Bereich in einen anderen Bereich abbilden"

#: of robot_hat.utils.mapping:3
msgid "value to map"
msgstr "abzubildender Wert"

#: of robot_hat.utils.mapping:5
msgid "input minimum"
msgstr "Eingangsminimum"

#: of robot_hat.utils.mapping:7
msgid "input maximum"
msgstr "Eingangsmaximum"

#: of robot_hat.utils.mapping:9
msgid "output minimum"
msgstr "Ausgangsminimum"

#: of robot_hat.utils.mapping:11
msgid "output maximum"
msgstr "Ausgangsmaximum"

#: of robot_hat.utils.mapping:13
msgid "mapped value"
msgstr "Abgebildeter Wert"

#: of robot_hat.utils.get_ip:1
msgid "Get IP address"
msgstr "IP-Adresse abrufen"

#: of robot_hat.utils.get_ip:3
msgid "interfaces to check"
msgstr "Zu überprüfende Schnittstellen"

#: of robot_hat.utils.get_ip:5
msgid "IP address or False if not found"
msgstr "IP-Adresse oder False, wenn nicht gefunden"

#: of robot_hat.utils.reset_mcu:1
msgid "Reset mcu on Robot Hat."
msgstr "MCU auf dem Robot Hat zurücksetzen."

#: of robot_hat.utils.reset_mcu:3
msgid ""
"This is helpful if the mcu somehow stuck in a I2C data transfer loop, and"
" Raspberry Pi getting IOError while Reading ADC, manipulating PWM, etc."
msgstr ""
"Dies ist hilfreich, wenn der MCU irgendwie in einer I2C-"
"Datenübertragungsschleife steckt und der Raspberry Pi einen IOError beim "
"Lesen des ADC, Manipulieren des PWM usw. erhält."

#: of robot_hat.utils.get_battery_voltage:1
msgid "Get battery voltage"
msgstr "Batteriespannung abrufen"

#: of robot_hat.utils.get_battery_voltage:3
msgid "battery voltage(V)"
msgstr "Batteriespannung (V)"


