# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-30 11:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_adc.rst:4
msgid "class ``ADC``"
msgstr "Klasse ``ADC``"

#: ../api_adc.rst:6
msgid "**Example**"
msgstr "**Beispiel**"

#: ../api_adc.rst:28
msgid "**API**"
msgstr "**API**"

#: of robot_hat.adc.ADC:1
msgid "Bases: :py:class:`~robot_hat.i2c.I2C`"
msgstr "Basisklasse: :py:class:`~robot_hat.i2c.I2C`"

#: of robot_hat.adc.ADC:1 robot_hat.adc.ADC.__init__:1
msgid "Analog to digital converter"
msgstr "Analog-Digital-Wandler"

#: of robot_hat.adc.ADC.__init__
msgid "Parameters"
msgstr "Parameter"

#: of robot_hat.adc.ADC.__init__:3
msgid "channel number (0-7/A0-A7)"
msgstr "Kanalnummer (0-7/A0-A7)"

#: of robot_hat.adc.ADC.read:1
msgid "Read the ADC value"
msgstr "ADC-Wert lesen"

#: of robot_hat.adc.ADC.read robot_hat.adc.ADC.read_voltage
msgid "Returns"
msgstr "Rückgabewert"

#: of robot_hat.adc.ADC.read:3
msgid "ADC value(0-4095)"
msgstr "ADC-Wert (0-4095)"

#: of robot_hat.adc.ADC.read robot_hat.adc.ADC.read_voltage
msgid "Return type"
msgstr "Rückgabetyp"

#: of robot_hat.adc.ADC.read_voltage:1
msgid "Read the ADC value and convert to voltage"
msgstr "ADC-Wert lesen und in Spannung umwandeln"

#: of robot_hat.adc.ADC.read_voltage:3
msgid "Voltage value(0-3.3(V))"
msgstr "Spannungswert (0-3.3(V))"
