# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, SunFounder
# This file is distributed under the same license as the SunFounder Robot
# HAT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SunFounder Robot HAT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-29 18:21+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../api_utils.rst:2
msgid "module ``utils``"
msgstr "モジュール ``utils``"

#: of robot_hat.utils.set_volume:1
msgid "Set volume"
msgstr "音量を設定する"

#: of robot_hat.utils.get_ip robot_hat.utils.is_installed
#: robot_hat.utils.mapping robot_hat.utils.run_command
#: robot_hat.utils.set_volume
msgid "Parameters"
msgstr "パラメータ"

#: of robot_hat.utils.set_volume:3
msgid "volume(0~100)"
msgstr "音量（0〜100）"

#: of robot_hat.utils.run_command:1
msgid "Run command and return status and output"
msgstr "コマンドを実行し、状態と出力を返す"

#: of robot_hat.utils.run_command:3
msgid "command to run"
msgstr "実行するコマンド"

#: of robot_hat.utils.get_battery_voltage robot_hat.utils.get_ip
#: robot_hat.utils.is_installed robot_hat.utils.mapping
#: robot_hat.utils.run_command
msgid "Returns"
msgstr "戻り値"

#: of robot_hat.utils.run_command:5
msgid "status, output"
msgstr "状態、出力"

#: of robot_hat.utils.get_battery_voltage robot_hat.utils.get_ip
#: robot_hat.utils.is_installed robot_hat.utils.mapping
#: robot_hat.utils.run_command
msgid "Return type"
msgstr "戻り値の型"

#: of robot_hat.utils.is_installed:1
msgid "Check if command is installed"
msgstr "コマンドがインストールされているかどうかを確認する"

#: of robot_hat.utils.is_installed:3
msgid "command to check"
msgstr "確認するコマンド"

#: of robot_hat.utils.is_installed:5
msgid "True if installed"
msgstr "インストールされている場合はTrue"

#: of robot_hat.utils.mapping:1
msgid "Map value from one range to another range"
msgstr "ある範囲の値を別の範囲にマップする"

#: of robot_hat.utils.mapping:3
msgid "value to map"
msgstr "マップする値"

#: of robot_hat.utils.mapping:5
msgid "input minimum"
msgstr "入力最小値"

#: of robot_hat.utils.mapping:7
msgid "input maximum"
msgstr "入力最大値"

#: of robot_hat.utils.mapping:9
msgid "output minimum"
msgstr "出力最小値"

#: of robot_hat.utils.mapping:11
msgid "output maximum"
msgstr "出力最大値"

#: of robot_hat.utils.mapping:13
msgid "mapped value"
msgstr "マップされた値"

#: of robot_hat.utils.get_ip:1
msgid "Get IP address"
msgstr "IPアドレスを取得する"

#: of robot_hat.utils.get_ip:3
msgid "interfaces to check"
msgstr "チェックするインターフェース"

#: of robot_hat.utils.get_ip:5
msgid "IP address or False if not found"
msgstr "見つかった場合はIPアドレス、見つからない場合はFalse"

#: of robot_hat.utils.reset_mcu:1
msgid "Reset mcu on Robot Hat."
msgstr "Robot Hat上のMCUをリセットする。"

#: of robot_hat.utils.reset_mcu:3
msgid ""
"This is helpful if the mcu somehow stuck in a I2C data transfer loop, and"
" Raspberry Pi getting IOError while Reading ADC, manipulating PWM, etc."
msgstr ""
"これは、MCUが何らかの理由でI2Cデータ転送ループに固まり、Raspberry "
"PiがADCの読み取り、PWMの操作などでIOErrorを取得している場合に役立ちます。"

#: of robot_hat.utils.get_battery_voltage:1
msgid "Get battery voltage"
msgstr "バッテリー電圧を取得する"

#: of robot_hat.utils.get_battery_voltage:3
msgid "battery voltage(V)"
msgstr "バッテリー電圧（V）"
